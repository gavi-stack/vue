{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      newTask: '',\n      tasks: []\n    };\n  },\n  methods: {\n    async fetchTasks() {\n      try {\n        const response = await axios.get('https://dummyjson.com/tasks');\n        this.tasks = response.data.tasks; // Asegúrate de que la estructura de datos coincide con la API\n      } catch (error) {\n        console.error('Error fetching tasks:', error);\n      }\n    },\n    async addTask() {\n      // Aquí podrías agregar lógica para enviar la nueva tarea a la API\n      if (this.newTask.trim() !== '') {\n        const newTaskData = {\n          title: this.newTask\n          // Puedes agregar más propiedades aquí si la API lo permite\n        };\n        try {\n          // Si tu API tiene un endpoint para agregar tareas, usa algo como:\n          await axios.post('https://dummyjson.com/tasks/add', newTaskData);\n          this.tasks.push(newTaskData); // Añadir la nueva tarea localmente\n          this.newTask = ''; // Limpiar el campo de entrada\n        } catch (error) {\n          console.error('Error adding task:', error);\n        }\n      }\n    }\n  },\n  mounted() {\n    this.fetchTasks(); // Cargar tareas cuando el componente se monte\n  }\n};","map":{"version":3,"names":["axios","data","newTask","tasks","methods","fetchTasks","response","get","error","console","addTask","trim","newTaskData","title","post","push","mounted"],"sources":["src/views/CombinedView.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h1>Lista de Tareas</h1>\r\n      <form @submit.prevent=\"addTask\">\r\n        <input\r\n          v-model=\"newTask\"\r\n          type=\"text\"\r\n          placeholder=\"Agrega una nueva tarea\"\r\n          required\r\n        />\r\n        <button type=\"submit\">Agregar Tarea</button>\r\n      </form>\r\n      <h2>Tareas Anteriores</h2>\r\n      <ul>\r\n        <li v-for=\"task in tasks\" :key=\"task.id\">\r\n          {{ task.title }}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        newTask: '',\r\n        tasks: [],\r\n      };\r\n    },\r\n    methods: {\r\n      async fetchTasks() {\r\n        try {\r\n          const response = await axios.get('https://dummyjson.com/tasks');\r\n          this.tasks = response.data.tasks; // Asegúrate de que la estructura de datos coincide con la API\r\n        } catch (error) {\r\n          console.error('Error fetching tasks:', error);\r\n        }\r\n      },\r\n      async addTask() {\r\n        // Aquí podrías agregar lógica para enviar la nueva tarea a la API\r\n        if (this.newTask.trim() !== '') {\r\n          const newTaskData = {\r\n            title: this.newTask,\r\n            // Puedes agregar más propiedades aquí si la API lo permite\r\n          };\r\n  \r\n          try {\r\n            // Si tu API tiene un endpoint para agregar tareas, usa algo como:\r\n            await axios.post('https://dummyjson.com/tasks/add', newTaskData);\r\n            this.tasks.push(newTaskData); // Añadir la nueva tarea localmente\r\n            this.newTask = ''; // Limpiar el campo de entrada\r\n          } catch (error) {\r\n            console.error('Error adding task:', error);\r\n          }\r\n        }\r\n      },\r\n    },\r\n    mounted() {\r\n      this.fetchTasks(); // Cargar tareas cuando el componente se monte\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  /* Aquí pueden agregar estilos personalizados para el componente. */\r\n  h1 {\r\n    font-size: 2em;\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  form {\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  input {\r\n    margin-right: 10px;\r\n  }\r\n  \r\n  button {\r\n    background-color: #007bff;\r\n    color: white;\r\n    border: none;\r\n    padding: 10px 15px;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  button:hover {\r\n    background-color: #0056b3;\r\n  }\r\n  \r\n  ul {\r\n    list-style-type: none;\r\n    padding: 0;\r\n  }\r\n  \r\n  li {\r\n    background: #f8f9fa;\r\n    margin: 5px 0;\r\n    padding: 10px;\r\n    border-radius: 5px;\r\n  }\r\n  </style>\r\n  "],"mappings":";AAsBA,OAAAA,KAAA;AAEA;EACAC,KAAA;IACA;MACAC,OAAA;MACAC,KAAA;IACA;EACA;EACAC,OAAA;IACA,MAAAC,WAAA;MACA;QACA,MAAAC,QAAA,SAAAN,KAAA,CAAAO,GAAA;QACA,KAAAJ,KAAA,GAAAG,QAAA,CAAAL,IAAA,CAAAE,KAAA;MACA,SAAAK,KAAA;QACAC,OAAA,CAAAD,KAAA,0BAAAA,KAAA;MACA;IACA;IACA,MAAAE,QAAA;MACA;MACA,SAAAR,OAAA,CAAAS,IAAA;QACA,MAAAC,WAAA;UACAC,KAAA,OAAAX;UACA;QACA;QAEA;UACA;UACA,MAAAF,KAAA,CAAAc,IAAA,oCAAAF,WAAA;UACA,KAAAT,KAAA,CAAAY,IAAA,CAAAH,WAAA;UACA,KAAAV,OAAA;QACA,SAAAM,KAAA;UACAC,OAAA,CAAAD,KAAA,uBAAAA,KAAA;QACA;MACA;IACA;EACA;EACAQ,QAAA;IACA,KAAAX,UAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}