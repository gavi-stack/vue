{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'TaskList',\n  data() {\n    return {\n      newTaskTitle: '',\n      // Título de la nueva tarea\n      tasks: [] // Lista de tareas\n    };\n  },\n  methods: {\n    // Método para agregar una nueva tarea\n    addTask() {\n      if (this.newTaskTitle.trim()) {\n        // Aquí podrías implementar la lógica para agregar la tarea a tu API o a la lista local\n        this.tasks.push({\n          id: Date.now(),\n          title: this.newTaskTitle,\n          completed: false\n        });\n        this.newTaskTitle = ''; // Limpiar el campo de entrada\n      }\n    },\n    // Método para extraer tareas de la API\n    fetchTasks() {\n      fetch('https://dummyjson.com/todos') // Cambia la URL según la API que estés utilizando\n      .then(response => response.json()).then(data => {\n        this.tasks = data.todos; // Asumiendo que la respuesta tiene un campo \"todos\"\n      }).catch(error => {\n        console.error('Error fetching tasks:', error);\n      });\n    }\n  },\n  mounted() {\n    this.fetchTasks(); // Llamar a la función para cargar las tareas al montar el componente\n  }\n};","map":{"version":3,"names":["name","data","newTaskTitle","tasks","methods","addTask","trim","push","id","Date","now","title","completed","fetchTasks","fetch","then","response","json","todos","catch","error","console","mounted"],"sources":["src/views/CombinedView.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <h1>Lista de Tareas</h1>\r\n        \r\n        <!-- Formulario para agregar nuevas tareas -->\r\n        <form @submit.prevent=\"addTask\">\r\n            <div class=\"mb-3\">\r\n                <label for=\"taskTitle\" class=\"form-label\">Título de la Tarea</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"taskTitle\" v-model=\"newTaskTitle\" required />\r\n            </div>\r\n            <button type=\"submit\" class=\"btn btn-primary\">Agregar Tarea</button>\r\n        </form>\r\n\r\n        <!-- Lista de tareas -->\r\n        <div class=\"mt-4\">\r\n            <h2>Tareas Existentes</h2>\r\n            <ul class=\"list-group\">\r\n                <li v-for=\"task in tasks\" :key=\"task.id\" class=\"list-group-item\">\r\n                    {{ task.title }} - <span :class=\"{'text-success': task.completed, 'text-warning': !task.completed}\">\r\n                        {{ task.completed ? 'Completada' : 'Pendiente' }}\r\n                    </span>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: 'TaskList',\r\n    data() {\r\n        return {\r\n            newTaskTitle: '', // Título de la nueva tarea\r\n            tasks: [] // Lista de tareas\r\n        };\r\n    },\r\n    methods: {\r\n        // Método para agregar una nueva tarea\r\n        addTask() {\r\n            if (this.newTaskTitle.trim()) {\r\n                // Aquí podrías implementar la lógica para agregar la tarea a tu API o a la lista local\r\n                this.tasks.push({ id: Date.now(), title: this.newTaskTitle, completed: false });\r\n                this.newTaskTitle = ''; // Limpiar el campo de entrada\r\n            }\r\n        },\r\n        // Método para extraer tareas de la API\r\n        fetchTasks() {\r\n            fetch('https://dummyjson.com/todos') // Cambia la URL según la API que estés utilizando\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    this.tasks = data.todos; // Asumiendo que la respuesta tiene un campo \"todos\"\r\n                })\r\n                .catch(error => {\r\n                    console.error('Error fetching tasks:', error);\r\n                });\r\n        }\r\n    },\r\n    mounted() {\r\n        this.fetchTasks(); // Llamar a la función para cargar las tareas al montar el componente\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/* Aquí pueden agregar estilos personalizados para el componente. */\r\n</style>\r\n"],"mappings":";AA4BA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,YAAA;MAAA;MACAC,KAAA;IACA;EACA;EACAC,OAAA;IACA;IACAC,QAAA;MACA,SAAAH,YAAA,CAAAI,IAAA;QACA;QACA,KAAAH,KAAA,CAAAI,IAAA;UAAAC,EAAA,EAAAC,IAAA,CAAAC,GAAA;UAAAC,KAAA,OAAAT,YAAA;UAAAU,SAAA;QAAA;QACA,KAAAV,YAAA;MACA;IACA;IACA;IACAW,WAAA;MACAC,KAAA;MAAA,CACAC,IAAA,CAAAC,QAAA,IAAAA,QAAA,CAAAC,IAAA,IACAF,IAAA,CAAAd,IAAA;QACA,KAAAE,KAAA,GAAAF,IAAA,CAAAiB,KAAA;MACA,GACAC,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,0BAAAA,KAAA;MACA;IACA;EACA;EACAE,QAAA;IACA,KAAAT,UAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}